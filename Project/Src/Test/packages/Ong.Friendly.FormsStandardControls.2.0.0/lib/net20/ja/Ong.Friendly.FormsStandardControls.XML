<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ong.Friendly.FormsStandardControls</name>
    </assembly>
    <members>
        <member name="T:Ong.Friendly.FormsStandardControls.RowSelectedInfo">
            <summary>
            行選択情報です。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.RowSelectedInfo.#ctor">
            <summary>
            コンストラクタです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.RowSelectedInfo.#ctor(System.Int32,System.Boolean)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="row">列</param>
            <param name="selected">選択状態</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.RowSelectedInfo.Row">
            <summary>
            行です。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.RowSelectedInfo.Selected">
            <summary>
            選択状態を取得／設定します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.Inside.Initializer">
            <summary>
            初期化です。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Inside.Initializer.Initialize(Codeer.Friendly.Windows.WindowsAppFriend,System.Type)">
            <summary>
            初期化です。対象のアプリケーションにアセンブリを読み込ませます。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="myType">タイプ。</param>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsTreeNode">
            <summary>
            ツリーノードです。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.AppVarWrapper">
            <summary>
            AppVarラップアイテムの基本クラスです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.AppVarWrapper.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">対象アプリ操作クラス。</param>
            <param name="appVar">対象アプリ内変数操作クラス。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.App">
            <summary>
            アプリケーション操作クラスです。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.AppVar">
            <summary>
            アプリケーション変数操作クラスです。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.Item(System.String)">
            <summary>
            テスト対象アプリケーション内の変数の操作を呼び出すdelegateを取得します。
            </summary>
            <param name="operation">操作。</param>
            <returns>操作実行delegate。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.Item(System.String,Codeer.Friendly.Async)">
            <summary>
            テスト対象アプリケーション内の変数の操作を呼び出すdelegateを取得します。
            </summary>
            <param name="operation">操作。</param>
            <param name="async">非同期実行オブジェクト。</param>
            <returns>操作実行delegate。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.Item(System.String,Codeer.Friendly.OperationTypeInfo)">
            <summary>
            テスト対象アプリケーション内の変数の操作を呼び出すdelegateを取得します。
            </summary>
            <param name="operation">操作。</param>
            <param name="operationTypeInfo">操作タイプ情報。</param>
            <returns>操作実行delegate。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.AppVarWrapper.Item(System.String,Codeer.Friendly.OperationTypeInfo,Codeer.Friendly.Async)">
            <summary>
            テスト対象アプリケーション内の変数の操作を呼び出すdelegateを取得します。
            </summary>
            <param name="operation">操作。</param>
            <param name="operationTypeInfo">操作タイプ情報。</param>
            <param name="async">非同期実行オブジェクト。</param>
            <returns>操作実行delegate。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateExpand">
            <summary>
            展開します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateExpand(Codeer.Friendly.Async)">
            <summary>
            展開します。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCollapse">
            <summary>
            展開を閉じます。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCollapse(Codeer.Friendly.Async)">
            <summary>
            展開を閉じます。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateEditLabel(System.String)">
            <summary>
            ノード名を編集します。
            </summary>
            <param name="nodeText">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateEditLabel(System.String,Codeer.Friendly.Async)">
            <summary>
            ノード名を編集します。
            非同期で実行します。
            </summary>
            <param name="nodeText">テキスト。</param>
            <param name="async">非同期オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCheck(System.Boolean)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="check">true:チェック</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCheck(System.Boolean,Codeer.Friendly.Async)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="check">true:チェック</param>
            <param name="async">非同期オブジェクト</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateExpandInTarget(System.Windows.Forms.TreeNode)">
            <summary>
            展開します。
            </summary>
            <param name="treeNode">ノード。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCollapseInTarget(System.Windows.Forms.TreeNode)">
            <summary>
            展開をとじます。
            </summary>
            <param name="treeNode">ノード。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateCheckInTarget(System.Windows.Forms.TreeNode,System.Boolean)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="treeNode">ノード。</param>
            <param name="check">true:チェック</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeNode.EmulateEditLabelInTarget(System.Windows.Forms.TreeNode,System.String)">
            <summary>
            ノード名を編集します（内部）。
            </summary>
            <param name="treeNode">ノード。</param>
            <param name="nodeText">テキスト。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTreeNode.Text">
            <summary>
            テキストを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTreeNode.IsExpanded">
            <summary>
            展開しているかを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTreeNode.Checked">
            <summary>
            チェック状態を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsControlBase">
            <summary>
            FormsControlBase
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsControlBase.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsControlBase.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsControlBase.Text">
            <summary>
            テキストを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsControlBase.Visible">
            <summary>
            表示/非表示を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsControlBase.Enabled">
            <summary>
            活性/非活性を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsMonthCalendar">
            <summary>
            TypeがSystem.Windows.Forms.FormsMonthCalendarのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDay(System.DateTime)">
            <summary>
            現在の選択日付を設定します。
            </summary>
            <param name="date">日付。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDay(System.DateTime,Codeer.Friendly.Async)">
            <summary>
            現在の選択日付を設定します。
            非同期で実行します。
            </summary>
            <param name="date">日付。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDayInTarget(System.Windows.Forms.MonthCalendar,System.DateTime)">
            <summary>
            現在の選択日付を設定します。
            </summary>
            <param name="monthcalendar">MonthCalender。</param>
            <param name="date">日付。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDay(System.DateTime,System.DateTime)">
            <summary>
            現在の選択日付(範囲)を設定します。
            </summary>
            <param name="min">最小日付。</param>
            <param name="max">最大日付。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDay(System.DateTime,System.DateTime,Codeer.Friendly.Async)">
            <summary>
            現在の選択日付(範囲)を設定します。
            非同期で実行します。
            </summary>
            <param name="min">最小日付。</param>
            <param name="max">最大日付。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.EmulateSelectDaysInTarget(System.Windows.Forms.MonthCalendar,System.DateTime,System.DateTime)">
            <summary>
            現在の選択日付(範囲)を設定します。
            </summary>
            <param name="monthcalendar">MonthCalender。</param>
            <param name="min">最小日付。</param>
            <param name="max">最大日付。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.GetSelectionRange(System.DateTime@,System.DateTime@)">
            <summary>
            ユーザーによって現在選択されている日付範囲を取得します。 複数選択の場合に使用します。 
            </summary>
            <param name="min">最小日付。</param>
            <param name="max">最大日付。</param>
            <returns>成否。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.FirstDayOfWeek">
            <summary>
            カレンダーの左端の列に表示される曜日を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.MaxSelectionCount">
            <summary>
            選択できる最大日数です。 
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.SelectedDay">
            <summary>
            現在の選択日時です。 
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsMonthCalendar.Today">
            <summary>
            今日の日付です。 
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsCheckBox">
            <summary>
            TypeがSystem.Windows.Forms.CheckBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckBox.EmulateCheck(System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckBox.EmulateCheck(System.Windows.Forms.CheckState,Codeer.Friendly.Async)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="value">チェック状態。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckBox.EmulateCheckInTarget(System.Windows.Forms.CheckBox,System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="checkBox">チェックボックス。</param>
            <param name="value">チェック状態。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsCheckBox.CheckState">
            <summary>
            チェック状態を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsTextBox">
            <summary>
            TypeがSystem.Windows.Forms.TextBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTextBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTextBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTextBox.EmulateChangeText(System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTextBox.EmulateChangeText(System.String,Codeer.Friendly.Async)">
            <summary>
            テキストを変更します。
            非同期で実行します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTextBox.EmulateChangeTextInTarget(System.Windows.Forms.TextBox,System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="textBox">リッチテキストボックス。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsButton">
            <summary>
            TypeがSystem.Windows.Forms.Buttonのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsButton.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsButton.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsButton.EmulateClick">
            <summary>
            クリックです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsButton.EmulateClick(Codeer.Friendly.Async)">
            <summary>
            クリックです。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsButton.EmulateClickInTarget(System.Windows.Forms.Button)">
            <summary>
            クリックです。
            </summary>
            <param name="button">ボタン。</param>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.CellSelectedInfo">
            <summary>
            セル選択情報です。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.CellSelectedInfo.#ctor">
            <summary>
            コンストラクタです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.CellSelectedInfo.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="col">行。</param>
            <param name="row">列。</param>
            <param name="selected">選択状態。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.CellSelectedInfo.Col">
            <summary>
            列です。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.CellSelectedInfo.Row">
            <summary>
            行です。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.CellSelectedInfo.Selected">
            <summary>
            選択状態を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsToolStrip">
            <summary>
            ツールストリップです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.GetItem(System.Int32[])">
            <summary>
            子アイテムを取得します。
            </summary>
            <param name="indexes">インデックス。</param>
            <returns>子アイテム</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.GetItem(System.String[])">
            <summary>
            子アイテムを取得します。
            </summary>
            <param name="keys">キーとなる文字列です。</param>
            <returns>子アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.FindItem(System.String[])">
            <summary>
            表示文字列からアイテムを検索します。
            </summary>
            <param name="texts">表示文字列。</param>
            <returns>表示文字列。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.GetItemInTarget(System.Windows.Forms.ToolStrip,System.Int32[])">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="toolStrip">ツールストリップ。</param>
            <param name="indexes">インデックス。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.GetItemInTarget(System.Windows.Forms.ToolStrip,System.String[])">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="toolStrip">ツールストリップ。</param>
            <param name="keys">インデックス。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStrip.FindItemInTarget(System.Windows.Forms.ToolStrip,System.String[])">
            <summary>
            表示文字列からアイテムを検索します。
            </summary>
            <param name="toolStrip">ツールストリップ。</param>
            <param name="texts">表示文字列。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsListView">
            <summary>
            TypeがSystem.Windows.Forms.ListViewのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.GetListViewItem(System.Int32)">
            <summary>
            指定したインデックスのアイテムを取得します。
            </summary>
            <param name="index">インデックス。</param>
            <returns>指定したインデックスのアイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.FindItemWithText(System.String,System.Boolean,System.Int32)">
            <summary>
            指定したテキスト値で始まる最初のアイテムを検索します。
            </summary>
            <param name="itemText">テキスト。</param>
            <param name="includeSubItemsInSearch">検索にサブ項目を含める場合は true。それ以外の場合は false。</param>
            <param name="startIndex">検索を開始する位置の項目のインデックス。</param>
            <returns>指定したテキスト値で始まる最初のアイテム</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.EmulateChangeSelectedState(System.Int32,System.Boolean)">
            <summary>
            指定されたインデックスに該当するアイテムの選択状態を変更します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.EmulateChangeSelectedState(System.Int32,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            指定されたインデックスに該当するアイテムの選択状態を変更します。
            非同期で実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
            <param name="async">非同期オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.GetSelectedIndexesInTarget(System.Windows.Forms.ListView)">
            <summary>
            選択されたインデックスの一覧を取得します（内部）。
            </summary>
            <param name="listview">リストビュー</param>
            <returns>選択されたインデックス一覧。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListView.EmulateChangeSelectedStateInTarget(System.Windows.Forms.ListView,System.Int32,System.Boolean)">
            <summary>
            リストビューアイテムを選択します（内部）。
            </summary>
            <param name="listview">リストビュー。</param>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListView.ViewMode">
            <summary>
            Viewモードを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListView.ColumnCount">
            <summary>
            列数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListView.ItemCount">
            <summary>
            アイテム数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListView.SelectIndexes">
            <summary>
            選択されたインデックスの一覧を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsListBox">
            <summary>
            TypeがSystem.Windows.Forms.ListBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.FindListIndex(System.String)">
            <summary>
            アイテムを指定されたテキストで検索します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <returns>検索されたアイテムのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.FindString(System.String)">
            <summary>
            指定した文字列で始まる最初の項目を検索します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <returns>検索されたアイテムのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.FindString(System.String,System.Int32)">
            <summary>
            指定した文字列で始まる最初のアイテムを検索します。指定した開始インデックスから検索が開始します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <param name="startIndex">最初の検索対象項目の前にある項目のインデックス。 先頭から検索する場合は-1に設定します。 </param>
            <returns>検索されたノードのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.FindStringExact(System.String)">
            <summary>
            指定した文字列と正確に一致する最初の項目を検索します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <returns>最初に見つかった項目のインデックス。一致する項目が見つからない場合は-1を返します。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.FindStringExact(System.String,System.Int32)">
            <summary>
            指定した文字列と正確に一致する最初の項目を検索します。 指定した開始インデックスから検索が開始します。
            </summary>
            <param name="itemText">各ノードのテキスト</param>
            <param name="startIndex">最初の検索対象項目の前にある項目のインデックス。 先頭から検索する場合は-1に設定します。</param>
            <returns>最初に見つかった項目のインデックス。一致する項目が見つからない場合は-1を返します。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedIndex(System.Int32)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedIndex(System.Int32,Codeer.Friendly.Async)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            非同期に実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedState(System.Int32,System.Boolean)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            </summary>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedState(System.Int32,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            非同期に実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
            <param name="async">非同期オブジェクト</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.GetSelectedIndexesInTarget(System.Windows.Forms.ListBox)">
            <summary>
            リストアイテムを選択します（内部）。
            </summary>
            <param name="listbox">リストボックス</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedIndexInTarget(System.Windows.Forms.ListBox,System.Int32)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            非同期に実行します。
            </summary>
            <param name="listbox">ListBox。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListBox.EmulateChangeSelectedStateInTarget(System.Windows.Forms.ListBox,System.Int32,System.Boolean)">
            <summary>
            リストアイテムを選択します（内部）。
            </summary>
            <param name="listbox">ListBox。</param>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListBox.ItemCount">
            <summary>
            一覧のアイテム数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListBox.SelectedIndex">
            <summary>
            現在選択されているアイテムのインデックスを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListBox.SelectionMode">
            <summary>
            選択モードを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListBox.SelectedIndexes">
            <summary>
            選択状態のリスト項目一覧を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsCheckedListBox">
            <summary>
            TypeがSystem.Windows.Forms.CheckdListBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.#ctor(Ong.Friendly.FormsStandardControls.FormsControlBase)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.GetCheckState(System.Int32)">
            <summary>
            チェック状態を取得します。
            </summary>
            <returns>チェック状態</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.FindListIndex(System.String)">
            <summary>
            アイテムを指定されたテキストで検索します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <returns>検索されたアイテムのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.FindString(System.String)">
            <summary>
            指定した文字列で始まる最初の項目を検索します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <returns>検索されたアイテムのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.FindString(System.String,System.Int32)">
            <summary>
            指定した文字列で始まる最初のアイテムを検索します。指定した開始インデックスから検索が開始します。
            </summary>
            <param name="itemText">アイテムのテキスト。</param>
            <param name="startIndex">最初の検索対象項目の前にある項目のインデックス。 先頭から検索する場合は-1に設定します。 </param>
            <returns>検索されたノードのインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.FindStringExact(System.String)">
            <summary>
            指定した文字列と正確に一致する最初の項目を検索します。
            </summary>
            <param name="itemText">テキスト。</param>
            <returns>最初に見つかった項目のインデックス。一致する項目が見つからない場合は-1を返します。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.FindStringExact(System.String,System.Int32)">
            <summary>
            指定した文字列と正確に一致する最初の項目を検索します。 指定した開始インデックスから検索が開始します。
            </summary>
            <param name="itemText">各ノードのテキスト</param>
            <param name="startIndex">最初の検索対象項目の前にある項目のインデックス番号。 先頭から検索する場合は-1に設定します。</param>
            <returns>最初に見つかった項目のインデックス。一致する項目が見つからない場合は-1を返します。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateCheckState(System.Int32,System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateCheckState(System.Int32,System.Windows.Forms.CheckState,Codeer.Friendly.Async)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="value">チェック状態。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateChangeSelectedIndex(System.Int32)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            </summary>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateChangeSelectedIndex(System.Int32,Codeer.Friendly.Async)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            非同期に実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateCheckStateInTarget(System.Windows.Forms.CheckedListBox,System.Int32,System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="checkedListBox">対象のチェックリストボックス。</param>
            <param name="index">インデックス。</param>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.EmulateChangeSelectedIndexInTarget(System.Windows.Forms.CheckedListBox,System.Int32)">
            <summary>
            指定されたインデックスに該当するアイテムを選択状態にします。
            非同期に実行します。
            </summary>
            <param name="checkedListBox">対象のチェックリストボックス。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.CheckedIndicsInTarget(System.Windows.Forms.CheckedListBox)">
            <summary>
            現在チェックされているアイテムのインデックスを配列で取得します(内部)。
            </summary>
            <param name="checkedListBox">対象のチェックリストボックス。</param>
            <returns></returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.ItemCount">
            <summary>
            一覧のアイテム数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.SelectedItemIndex">
            <summary>
            現在選択されているアイテムのインデックスを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsCheckedListBox.CheckedIndices">
            <summary>
            現在チェックされているアイテムのインデックスを配列で取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsToolStripComboBox">
            <summary>
            ツールストリップアイテム操作クラスです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripComboBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">対象アプリ操作クラス。</param>
            <param name="appVar">対象アプリケーション内変数操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripComboBox.#ctor(Ong.Friendly.FormsStandardControls.FormsToolStripItem)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="item">ToolStripItem操作クラス。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripComboBox.ComboBox">
            <summary>
            コンボボックスを取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsNumericUpDown">
            <summary>
            TypeがWindows.Forms.NumericUpDownのウィンドウに対応した操作を提供します
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.EmulateChangeValue(System.Decimal)">
            <summary>
            値を変更します。
            </summary>
            <param name="value">値。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.EmulateChangeValue(System.Decimal,Codeer.Friendly.Async)">
            <summary>
            値を変更します。
            非同期で実行します。
            </summary>
            <param name="value">値。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.EmulateChangeValueInTarget(System.Windows.Forms.NumericUpDown,System.Decimal)">
            <summary>
            値を変更します。
            </summary>
            <param name="numeric">コントロール。</param>
            <param name="value">値。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.Value">
            <summary>
            値を取得
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.Minimum">
            <summary>
            最小値を取得
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsNumericUpDown.Maximum">
            <summary>
            最大値を取得
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.ErrorCheckSetting">
            <summary>
              It was not possible to check the state. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.ErrorNotSetListView">
            <summary>
              ListView that holds the item has not been set. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.ErrorNotSetToolStrip">
            <summary>
              ToolStrip that holds the item has not been set. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Properties.Resources.ErrorNotSetTreeView">
            <summary>
              TreeView that holds the item has not been set. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsComboBox">
            <summary>
            TypeがSystem.Windows.Forms.ComboBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.GetItemText(System.Int32)">
            <summary>
            アイテムの文字列を取得します。
            </summary>
            <param name="index">インデックス。</param>
            <returns>アイテム文字列。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.FindString(System.String)">
            <summary>
            指定の文字列のアイテムを部分一致検索します。
            </summary>
            <param name="text">テキスト。</param>
            <returns>アイテムインデックス。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.FindString(System.String,System.Int32)">
            <summary>
            指定の文字列のアイテムを部分一致検索します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="startIndex">検索開始インデックス。</param>
            <returns>アイテムインデックス。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.FindStringExact(System.String)">
            <summary>
            指定の文字列のアイテムを完全一致検索します。
            </summary>
            <param name="text">テキスト。</param>
            <returns>アイテムインデックス。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.FindStringExact(System.String,System.Int32)">
            <summary>
            指定の文字列のアイテムを完全一致検索します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="startIndex">検索開始インデックス。</param>
            <returns>アイテムインデックス。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeText(System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeText(System.String,Codeer.Friendly.Async)">
            <summary>
            テキストを変更します。
            非同期で実行します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeSelect(System.Int32)">
            <summary>
            指定のインデックスのアイテムを選択します。
            </summary>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeSelect(System.Int32,Codeer.Friendly.Async)">
            <summary>
            指定のインデックスのアイテムを選択します。
            非同期で実行します。
            </summary>
            <param name="index">インデックス。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeTextInTarget(System.Windows.Forms.ComboBox,System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="comboBox">コンボボックス。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsComboBox.EmulateChangeSelectInTarget(System.Windows.Forms.ComboBox,System.Int32)">
            <summary>
            指定のインデックスのアイテムを選択します。
            </summary>
            <param name="comboBox">コンボボックス。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsComboBox.ItemCount">
            <summary>
            一覧のアイテム数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsComboBox.SelectedItemIndex">
            <summary>
            現在選択されているアイテムのインデックスを取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsToolStripTextBox">
            <summary>
            ツールストリップアイテム操作クラスです。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsToolStripItem">
            <summary>
            ツールストリップアイテム操作クラスです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripItem.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">対象アプリ操作クラス。</param>
            <param name="appVar">対象アプリケーション内変数操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripItem.EmulateClick">
            <summary>
            クリックです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripItem.EmulateClick(Codeer.Friendly.Async)">
            <summary>
            クリックです。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripItem.EmulateClickInTarget(System.Windows.Forms.ToolStripItem)">
            <summary>
            クリックです。
            </summary>
            <param name="item">アイテム。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripItem.Text">
            <summary>
            テキスト
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripItem.Visible">
            <summary>
            可視状態か
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripItem.Enabled">
            <summary>
            有効であるか
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripTextBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">対象アプリ操作クラス。</param>
            <param name="appVar">対象アプリケーション内変数操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripTextBox.#ctor(Ong.Friendly.FormsStandardControls.FormsToolStripItem)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="item">ToolStripItem操作クラス</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripTextBox.TextBox">
            <summary>
            テキストボックス取得です。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsListViewItem">
            <summary>
            リストアイテムです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="item">アイテム。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.GetSubItem(System.Int32)">
            <summary>
            サブアイテムを取得します。
            </summary>
            <param name="subitemindex">サブアイテムインデックス。</param>
            <returns>サブアイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateCheck(System.Boolean)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateCheck(System.Boolean,Codeer.Friendly.Async)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="value">チェック状態。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateEditLabel(System.String)">
            <summary>
            テキストを編集します。
            </summary>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateEditLabel(System.String,Codeer.Friendly.Async)">
            <summary>
            テキストを編集します。
            非同期で実行します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.GetSubItemInTarget(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            サブアイテムを取得します(内部)。
            </summary>
            <param name="listviewitem">リストビューアイテム。</param>
            <param name="subitemindex">リストビューサブアイテムインデックス。</param>
            <returns>FormsListViewSubItem</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateEditLabelInTarget(System.Windows.Forms.ListViewItem,System.String)">
            <summary>
            テキストを編集します。
            </summary>
            <param name="item">アイテム。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EmulateCheckInTarget(System.Windows.Forms.ListViewItem,System.Boolean)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="item">リストビューアイテム。</param>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.EnumChildWindows(System.IntPtr,Ong.Friendly.FormsStandardControls.FormsListViewItem.EnumWindowsProc,System.IntPtr)">
            <summary>
            子ウィンドウ検索。
            </summary>
            <param name="parent">親ウィンドウハンドル。</param>
            <param name="lpEnumFunc">検索プロック。</param>
            <param name="lParam">パラメータ。</param>
            <returns></returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            ウィンドウクラス名称取得。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="lpClassName">クラス名称格納バッファ。</param>
            <param name="nMaxCount">最大数。</param>
            <returns>文字数。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewItem.SetWindowText(System.IntPtr,System.String)">
            <summary>
            テキストの設定。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="lpString">テキスト。</param>
            <returns>成否。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListViewItem.Text">
            <summary>
            テキストを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListViewItem.ItemIndex">
            <summary>
            アイテムインデックスを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListViewItem.Checked">
            <summary>
            チェック状態を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsListViewItem.EnumWindowsProc">
            <summary>
            ウィンドウ検索プロック。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="lParam">パラメータ。</param>
            <returns>検索を続けるか。</returns>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsLinkLabel">
            <summary>
            TypeがSystem.Windows.Forms.LinkLabelのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsLinkLabel.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsLinkLabel.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsLinkLabel.EmulateLinkClick">
            <summary>
            クリックです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsLinkLabel.EmulateLinkClick(Codeer.Friendly.Async)">
            <summary>
            クリックです。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsLinkLabel.EmulateLinkClickInTarget(System.Windows.Forms.LinkLabel)">
            <summary>
            クリックです。
            </summary>
            <param name="linklabel">リンクラベル。</param>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsDateTimePicker">
            <summary>
            TypeがSystem.Windows.Forms.DateTimePickerのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロールです。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.EmulateSelectDay(System.DateTime)">
            <summary>
            現在日時を設定します。
            </summary>
            <param name="datetime">日時。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.EmulateSelectDay(System.DateTime,Codeer.Friendly.Async)">
            <summary>
            現在日時を設定します。
            非同期で実行します。
            </summary>
            <param name="datetime">日時。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.EmulateSelectDayInTarget(System.Windows.Forms.DateTimePicker,System.DateTime)">
            <summary>
            現在時間を設定します。
            </summary>
            <param name="datetimepicker">DateTimePicker。</param>
            <param name="datetime">時間。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDateTimePicker.SelectedDay">
            <summary>
            現在日時を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsProgressBar">
            <summary>
            TypeがSystem.Windows.Forms.TextBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsProgressBar.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsProgressBar.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsProgressBar.Min">
            <summary>
            最小値です。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsProgressBar.Max">
            <summary>
            最大値です。 
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsProgressBar.Pos">
            <summary>
            現在位置です。  
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsTabControl">
            <summary>
            TypeがSystem.Windows.Forms.TabControlのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTabControl.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTabControl.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTabControl.EmulateTabSelect(System.Int32)">
            <summary>
            タブを選択します。
            </summary>
            <param name="index">タブインデックス（０始まり）。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTabControl.EmulateTabSelect(System.Int32,Codeer.Friendly.Async)">
            <summary>
            タブを選択します。
            非同期で実行します。
            </summary>
            <param name="index">タブインデックス（０始まり）。</param>
            <param name="async">非同期オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTabControl.EmulateTabSelectInTarget(System.Windows.Forms.TabControl,System.Int32)">
            <summary>
            指定のインデックスのアイテムを選択します。
            </summary>
            <param name="tabControl">タブコントロール。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTabControl.TabCount">
            <summary>
            タブ数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTabControl.SelectedIndex">
            <summary>
            選択されたタブインデックスを取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsListViewSubItem">
            <summary>
            リストビューサブアイテムです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsListViewSubItem.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsListViewSubItem.Text">
            <summary>
            テキストを取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsRadioButton">
            <summary>
            TypeがSystem.Windows.Forms.RadioButtonのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRadioButton.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRadioButton.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRadioButton.EmulateCheck">
            <summary>
            チェックします。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRadioButton.EmulateCheck(Codeer.Friendly.Async)">
            <summary>
            チェックします。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRadioButton.EmulateCheckInTarget(System.Windows.Forms.RadioButton)">
            <summary>
            チェック状態にします。
            </summary>
            <param name="radioButton">ラジオボタン。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsRadioButton.Checked">
            <summary>
            チェック状態を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsDataGridView">
            <summary>
            TypeがSystem.Windows.Forms.DataGridViewのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetText(System.Int32,System.Int32)">
            <summary>
            行列で指定したセルのテキストを取得します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <returns>テキスト。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetText(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            行列で指定した範囲のセルのテキストを取得します。
            </summary>
            <param name="startCol">開始列。</param>
            <param name="startRow">開始行。</param>
            <param name="endCol">終了列。</param>
            <param name="endRow">終了行。</param>
            <returns>テキスト配列。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateCellCheck(System.Int32,System.Int32,System.Boolean)">
            <summary>
            セルのチェック状態を変更します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="isChecked">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateCellCheck(System.Int32,System.Int32,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            セルのチェック状態を変更します。
            非同期で実行します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="isChecked">チェック状態。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellText(System.Int32,System.Int32,System.String)">
            <summary>
            セルのテキストを変更します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellText(System.Int32,System.Int32,System.String,Codeer.Friendly.Async)">
            <summary>
            セルのテキストを変更します。
            非同期で実行します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="text">テキスト。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellComboSelect(System.Int32,System.Int32,System.Int32)">
            <summary>
            セルコンボの選択を変更します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellComboSelect(System.Int32,System.Int32,System.Int32,Codeer.Friendly.Async)">
            <summary>
            セルコンボの選択を変更します。
            非同期で実行します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="index">インデックス。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClickCellContent(System.Int32,System.Int32)">
            <summary>
            セルボタン、セルリンクをクリックします。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClickCellContent(System.Int32,System.Int32,Codeer.Friendly.Async)">
            <summary>
            セルボタン、セルリンクをクリックします。
            非同期で実行します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCurrentCell(System.Int32,System.Int32)">
            <summary>
            カレントセルを選択します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCurrentCell(System.Int32,System.Int32,Codeer.Friendly.Async)">
            <summary>
            カレントセルを選択します。
            非同期で実行します。
            </summary>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClearSelection">
            <summary>
            選択状態を解除します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClearSelection(Codeer.Friendly.Async)">
            <summary>
            選択状態を解除します。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellSelected(Ong.Friendly.FormsStandardControls.CellSelectedInfo[])">
            <summary>
            選択状態を変更します。
            </summary>
            <param name="cells">選択セル情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellSelected(Codeer.Friendly.Async,Ong.Friendly.FormsStandardControls.CellSelectedInfo[])">
            <summary>
            選択状態を変更します。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
            <param name="cells">選択セル情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeRowSelected(Ong.Friendly.FormsStandardControls.RowSelectedInfo[])">
            <summary>
            行選択状態を変更します。
            </summary>
            <param name="rows">選択行情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeRowSelected(Codeer.Friendly.Async,Ong.Friendly.FormsStandardControls.RowSelectedInfo[])">
            <summary>
            行選択状態を変更します。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
            <param name="rows">選択行情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateDelete">
            <summary>
            Delete操作をエミュレートします。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateDelete(Codeer.Friendly.Async)">
            <summary>
            Delete操作をエミュレートします。
            非同期で実行します。
            </summary>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetSelectedRowsInTarget(System.Windows.Forms.DataGridView)">
            <summary>
            現在の選択行を取得します。
            </summary>
            <param name="grid">グリッド。</param>
            <returns>現在の選択行。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetTextInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32)">
            <summary>
            行列で指定したセルのテキストを取得します(内部)。
            </summary>
            <param name="datagridview">データグリッドビュー。</param>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <returns>テキスト。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetTextInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            行列で指定した範囲のセルのテキストを取得します。
            </summary>
            <param name="datagridview">データグリッド。</param>
            <param name="startCol">開始列。</param>
            <param name="startRow">開始行。</param>
            <param name="endCol">終了列。</param>
            <param name="endRow">終了行。</param>
            <returns>テキスト配列。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetSelectedCellsInTarget(System.Windows.Forms.DataGridView)">
            <summary>
            現在の選択セルを取得します。
            </summary>
            <param name="grid">グリッド。</param>
            <returns>現在の選択セル。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateCellCheckInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32,System.Boolean)">
            <summary>
            セルのチェック状態を変更します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="isChecked">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellTextInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32,System.String)">
            <summary>
            セルのテキストを変更します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeRowSelectedInTarget(System.Windows.Forms.DataGridView,Ong.Friendly.FormsStandardControls.RowSelectedInfo[])">
            <summary>
            行選択状態を変更します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="rows">選択行情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellComboSelectInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32,System.Int32)">
            <summary>
            セルコンボの選択を変更します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="col">列。</param>
            <param name="row">行。</param>
            <param name="index">インデックス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClickCellContentInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32)">
            <summary>
            セルボタン、セルリンクをクリックします。
            </summary>
            <param name="grid"></param>
            <param name="col">列。</param>
            <param name="row">行。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCurrentCellInTarget(System.Windows.Forms.DataGridView,System.Int32,System.Int32)">
            <summary>
            カレントセルを選択します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="col">列。</param>
            <param name="row">行。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateChangeCellSelectedInTarget(System.Windows.Forms.DataGridView,Ong.Friendly.FormsStandardControls.CellSelectedInfo[])">
            <summary>
            選択状態を変更します。
            </summary>
            <param name="grid">グリッド。</param>
            <param name="cells">選択セル情報。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateClearSelectionInTarget(System.Windows.Forms.DataGridView)">
            <summary>
            選択状態を解除します。
            </summary>
            <param name="grid">グリッド。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.EmulateDeleteInTarget(System.Windows.Forms.DataGridView)">
            <summary>
            Delete操作をエミュレートします。
            </summary>
            <param name="grid">グリッド。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsDataGridView.GetCurrentCellInTarget(System.Windows.Forms.DataGridView)">
            <summary>
            現在の選択セルを取得します。
            </summary>
            <param name="grid">グリッド。</param>
            <returns>現在の選択セル。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDataGridView.ColumnCount">
            <summary>
            列数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDataGridView.RowCount">
            <summary>
            行数を取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDataGridView.CurrentCell">
            <summary>
            現在の選択セルを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDataGridView.SelectedCells">
            <summary>
            現在の選択セルを取得します。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsDataGridView.SelectedRows">
            <summary>
            現在の選択行を取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.Cell">
            <summary>
            セル情報です。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Cell.#ctor">
            <summary>
            コンストラクタです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Cell.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="col">行。</param>
            <param name="row">列。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Cell.Equals(System.Object)">
            <summary>
            等価比較。
            </summary>
            <param name="obj">オブジェクト。</param>
            <returns>比較結果。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Cell.GetHashCode">
            <summary>
            ハッシュコード取得。
            </summary>
            <returns>ハッシュコード。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Cell.Col">
            <summary>
            列です。
            </summary>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.Cell.Row">
            <summary>
            行です。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.Inside.ResourcesLocal">
            <summary>
            ローカライズ済みリソース。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Inside.ResourcesLocal.Initialize(Codeer.Friendly.Windows.WindowsAppFriend)">
            <summary>
            初期化。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.Inside.ResourcesLocal.Initialize">
            <summary>
            コンストラクタ。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsTreeView">
            <summary>
            TypeがSystem.Windows.Forms.TreeViewのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.GetItem(System.Int32[])">
            <summary>
            子アイテムを取得します。
            </summary>
            <param name="indexes">インデックス。</param>
            <returns>子アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.GetItem(System.String[])">
            <summary>
            子アイテムを取得します。
            </summary>
            <param name="keys">キーとなるインデックスです。</param>
            <returns>子アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.FindItem(System.String[])">
            <summary>
            表示文字列からアイテムを検索します。
            </summary>
            <param name="texts">表示文字列。</param>
            <returns>子アイテム。</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.EmulateNodeSelect(Ong.Friendly.FormsStandardControls.FormsTreeNode)">
            <summary>
            ノードを選択します。
            </summary>
            <param name="node">ノード。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.EmulateNodeSelect(Ong.Friendly.FormsStandardControls.FormsTreeNode,Codeer.Friendly.Async)">
            <summary>
            ノードを選択します。
            非同期で実行します。
            </summary>
            <param name="node">ノード。</param>
            <param name="async">非同期オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.EmulateNodeSelectInTarget(System.Windows.Forms.TreeView,System.Windows.Forms.TreeNode)">
            <summary>
            ノードを選択します。
            非同期で実行します。
            </summary>
            <param name="tree">ツリー。</param>
            <param name="node">ノード。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.GetItemInTarget(System.Windows.Forms.TreeView,System.Int32[])">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="trerview">ツリービュー。</param>
            <param name="indexes">インデックス。</param>
            <returns>アイテム</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.GetItemInTarget(System.Windows.Forms.TreeView,System.String[])">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="trerview">ツリービュー。</param>
            <param name="keys">インデックス。</param>
            <returns>アイテム</returns>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsTreeView.FindItemInTarget(System.Windows.Forms.TreeView,System.String[])">
            <summary>
            表示文字列からアイテムを検索します。
            </summary>
            <param name="trerview">ツリービュー。</param>
            <param name="texts">表示文字列。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsTreeView.SelectNode">
            <summary>
            選択しているノードを取得します。
            </summary>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsRichTextBox">
            <summary>
            TypeがSystem.Windows.Forms.RichTextBoxのウィンドウに対応した操作を提供します。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRichTextBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="src">元となるウィンドウコントロール。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRichTextBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="appVar">アプリケーション内変数。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRichTextBox.EmulateChangeText(System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRichTextBox.EmulateChangeText(System.String,Codeer.Friendly.Async)">
            <summary>
            テキストを変更します。
            非同期で実行します。
            </summary>
            <param name="text">テキスト。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsRichTextBox.EmulateChangeTextInTarget(System.Windows.Forms.RichTextBox,System.String)">
            <summary>
            テキストを変更します。
            </summary>
            <param name="textBox">リッチテキストボックス。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="T:Ong.Friendly.FormsStandardControls.FormsToolStripButton">
            <summary>
            ツールストリップボタン操作クラスです。
            </summary>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripButton.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,Codeer.Friendly.AppVar)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="app">対象アプリ操作クラス。</param>
            <param name="appVar">対象アプリケーション内変数操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripButton.#ctor(Ong.Friendly.FormsStandardControls.FormsToolStripItem)">
            <summary>
            コンストラクタです。
            </summary>
            <param name="item">ToolStripItem操作クラス。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripButton.EmulateCheck(System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="value">チェック状態。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripButton.EmulateCheck(System.Windows.Forms.CheckState,Codeer.Friendly.Async)">
            <summary>
            チェック状態を設定します。
            非同期で実行します。
            </summary>
            <param name="value">チェック状態。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Ong.Friendly.FormsStandardControls.FormsToolStripButton.EmulateCheckInTarget(System.Windows.Forms.ToolStripButton,System.Windows.Forms.CheckState)">
            <summary>
            チェック状態を設定します。
            </summary>
            <param name="checkButton">チェックボックス。</param>
            <param name="value">チェック状態。</param>
        </member>
        <member name="P:Ong.Friendly.FormsStandardControls.FormsToolStripButton.CheckState">
            <summary>
            チェック状態を取得します。
            </summary>
        </member>
    </members>
</doc>
