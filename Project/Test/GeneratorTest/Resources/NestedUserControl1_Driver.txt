using Codeer.Friendly.Dynamic;
using Codeer.Friendly.Windows;
using Codeer.Friendly.Windows.Grasp;
using Codeer.TestAssistant.GeneratorToolKit;
using Ong.Friendly.FormsStandardControls;
using System.Linq;

namespace TestCode
{
    [UserControlDriver(TypeFullName = "CreateDriverTarget.UserControl1")]
    public class UserControl1_Driver
    {
        public WindowControl Core { get; }
        public FormsButton button1 => new FormsButton(Core.Dynamic().button1);
        public FormsListBox listBox1 => new FormsListBox(Core.Dynamic().listBox1);

        public UserControl1_Driver(WindowControl core)
        {
            Core = core;
        }
    }

    public static class UserControl1_Driver_Extensions
    {
        // TODO It is not the best way to identify. Please change to a better method.
        [UserControlDriverIdentify(CustomMethod = "TryGet")]
        public static UserControl1_Driver Attach_UserControl1(this TabUserControlForm_Driver window, int index)
            => new UserControl1_Driver(new WindowControl(window.Core.GetFromTypeFullName("CreateDriverTarget.UserControl1")[index]));

        public static void TryGet(this TabUserControlForm_Driver window, out int[] indices)
            => indices = Enumerable.Range(0, window.Core.GetFromTypeFullName("CreateDriverTarget.UserControl1").Length).ToArray();
    }
}