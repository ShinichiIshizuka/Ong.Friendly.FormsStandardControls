<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Codeer.Friendly.Windows.NativeStandardControls</name>
    </assembly>
    <members>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.EmulateUtility">
            <summary>
            エミュレートのためのユーティリティーです。
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.EmulateUtility.SendCommand(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr,System.Int32)">
            <summary>
            WM_COMMANDを通知します。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="handle">ハンドル。</param>
            <param name="code">通知コード。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.EmulateUtility.SendCommand(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr,System.Int32,Codeer.Friendly.Async)">
            <summary>
            WM_COMMANDを通知します。
            非同期で実行します。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="handle">ハンドル。</param>
            <param name="code">通知コード。</param>
            <param name="async">非同期実行オブジェクト。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.EmulateUtility.SendCommand(System.IntPtr,System.Int32)">
            <summary>
            WM_COMMANDを通知します。
            </summary>
            <param name="handle">ハンドル。</param>
            <param name="code">通知コード。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.EmulateUtility.InitNotify(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.NMHDR@)">
            <summary>
            WM_NOTIFYを通知します。
            対象アプリケーション内部で実行する必要があります。
            </summary>
            <param name="handle">ハンドル。</param>
            <param name="code">通知コード。</param>
            <param name="header">ヘッダ。</param>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.ResourcesLocal">
            <summary>
            ローカライズ済みリソース。
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.ResourcesLocal.Initialize(Codeer.Friendly.Windows.WindowsAppFriend)">
            <summary>
            初期化。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.ResourcesLocal.Initialize">
            <summary>
            コンストラクタ。
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVCF">
            <summary>
            Please refer to MSDN's LVCF_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVCOLUMN">
            <summary>
            Please refer to MSDN's LVCOLUMN.
            In order to obtain the optimal size within the library when obtaining strings, does not use cchTextMax. 
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVCOLUMN_CORE">
            <summary>
            Please refer to MSDN's LVCOLUMN.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVDISPINFO">
            <summary>
            Please refer to MSDN's LVDISPINFO.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVIF">
            <summary>
            Please refer to MSDN's LVIF_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVIR">
            <summary>
            Please refer to MSDN's LVIR_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVIS">
            <summary>
            Please refer to MSDN's LVIS_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView">
            <summary>
            Represents the display style of a calendar. 
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView.Decade">
            <summary>
            Decade
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView.Century">
            <summary>
            Century
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeCommonDefine">
            <summary>
            共通定義。
            詳細な情報はMSDNの同名の定義を参照お願いします。
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility">
            <summary>
            ネイティブデータ変換ユーティリティー
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToIntPtr(System.Boolean)">
            <summary>
            boolからIntPtrへ変換。
            </summary>
            <param name="value">bool。</param>
            <returns>IntPtr。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToBool(System.IntPtr)">
            <summary>
            IntPtrからbooへ変換。
            </summary>
            <param name="value">IntPtr。</param>
            <returns>bool。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.MAKELONG(System.Int32,System.Int32)">
            <summary>
            32bit値を作成します。
            </summary>
            <param name="lower">下位ワード。</param>
            <param name="upper">上位ワード。</param>
            <returns>32bit値。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.MAKELPARAM(System.Int32,System.Int32)">
            <summary>
            32bit値を作成します。
            </summary>
            <param name="lower">下位ワード。</param>
            <param name="upper">上位ワード。</param>
            <returns>32bit値。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.MAKEWORD(System.Int32,System.Int32)">
            <summary>
            16bit値を作成します。
            </summary>
            <param name="lower">下位バイト。</param>
            <param name="upper">上位バイト。</param>
            <returns>16bit値</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.MAKEIPADDRESS(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            IPアドレス作成。
            </summary>
            <param name="field0">フィールド0</param>
            <param name="field1">フィールド1</param>
            <param name="field2">フィールド2</param>
            <param name="field3">フィールド3</param>
            <returns>IPアドレス。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.MAKEIPRANGE(System.Byte,System.Byte)">
            <summary>
            IPアドレスの範囲を作成。
            </summary>
            <param name="lower">下限。</param>
            <param name="upper">上限。</param>
            <returns>IPアドレスの範囲。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToRectangle(Codeer.Friendly.Windows.NativeStandardControls.RECT)">
            <summary>
            RECT→Rectangle変換。
            </summary>
            <param name="rect">RECT。</param>
            <returns>Rectangle。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToSYSTEMTIME(System.DateTime)">
            <summary>
            DateTime→SYSTEMTIME変換。
            </summary>
            <param name="time">DateTime。</param>
            <returns>SYSTEMTIME。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToDateTime(Codeer.Friendly.Windows.NativeStandardControls.SYSTEMTIME)">
            <summary>
            SYSTEMTIME→DateTime変換。
            </summary>
            <param name="time">SYSTEMTIME。</param>
            <returns>DateTime。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.HIWORD(System.Int32)">
            <summary>
            上位ワード取得。
            </summary>
            <param name="value">32bit値。</param>
            <returns>上位ワード。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.LOWORD(System.Int32)">
            <summary>
            下位ワード取得。
            </summary>
            <param name="value">32bit値。</param>
            <returns>下位ワード。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToColor(System.IntPtr)">
            <summary>
            IntPtr→Colorに変換。
            </summary>
            <param name="value">IntPtr。</param>
            <returns>Color。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeDataUtility.ToIntPtr(System.Drawing.Color)">
            <summary>
            Color→IntPtrに変換。
            </summary>
            <param name="color">Color。</param>
            <returns>IntPtr。</returns>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods">
            <summary>
            ネイティブメソッド
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.WH_GETMESSAGE">
            <summary>
            GetMessgeへのインストール
            </summary>
        </member>
        <member name="F:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.WH_CALLWNDPROC">
            <summary>
            WndProcへのインストール
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetFocus">
            <summary>
            フォーカスウィンドウを取得
            </summary>
            <returns></returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Text.StringBuilder)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.String)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.Int32[])">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.SYSTEMTIME@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.SYSTEMTIME[])">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.TCITEM_CORE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.LVITEM_CORE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.LVCOLUMN_CORE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX_CORE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMHDR@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMDATETIMECHANGE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMIPADDRESS@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMTRBTHUMBPOSCHANGING@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMUPDOWN@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMSELCHANGE@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.RECT@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.NMTREEVIEW@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.TVHITTESTINFO@)">
            <summary>
            メッセージを送信します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="msg">メッセージ。</param>
            <param name="wParam">wParam。</param>
            <param name="lParam">lParam。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.ScreenToClient(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.POINT@)">
            <summary>
            スクリーン座標からクライアント座標に変換
            </summary>
            <param name="hWnd">ウィンドウハンドル</param>
            <param name="lpPoint">ポイント</param>
            <returns></returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.IsWindowVisible(System.IntPtr)">
            <summary>
            ウィンドウが表示状態であるか。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns></returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.IsWindowEnabled(System.IntPtr)">
            <summary>
            ウィンドウが有効状態であるか。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>ウィンドウが有効状態であるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SetWindowText(System.IntPtr,System.String)">
            <summary>
            ウィンドウテキストの設定。
            </summary>
            <param name="hwnd">ウィンドウハンドル。</param>
            <param name="lpString">設定文字列。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Window文字列取得。
            </summary>
            <param name="hWnd">ハンドル。</param>
            <param name="lpString">文字列格納バッファ。</param>
            <param name="nMaxCount">最大文字列。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowTextLength(System.IntPtr)">
            <summary>
            ウィンドウテキストの長さを取得する。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>ウィンドウテキストの長さ。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SetFocus(System.IntPtr)">
            <summary>
            フォーカスの設定。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>前のフォーカスウィンドウハンドル。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetScrollPos(System.IntPtr,System.Int32)">
            <summary>
            スクロール位置を取得します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="nBar">バーの種類。</param>
            <returns>位置。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SetScrollPos(System.IntPtr,System.Int32,System.Int32,System.Boolean)">
            <summary>
            スクロール位置を設定します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="nBar">スクロールバーの種類。</param>
            <param name="nPos">スクロール位置。</param>
            <param name="bRedraw">再描画を実施するか。</param>
            <returns></returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetScrollRange(System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            スクロールバーの種類を設定します。
            </summary>
            <param name="hWnd">ウインドウハンドル。</param>
            <param name="nBar">スクロールバーの種類。</param>
            <param name="lpMinPos">下限。</param>
            <param name="lpMaxPos">上限。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetClassName(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            クラス名称を取得。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="lpClassName">クラス名称格納バッファ。</param>
            <param name="nMaxCount">最大文字数。</param>
            <returns>文字サイズ。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetDlgCtrlID(System.IntPtr)">
            <summary>
            ダイアログIDの取得。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>ダイアログID。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetParent(System.IntPtr)">
            <summary>
            親ウィンドウを取得する。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>親ウィンドウ。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.IsWindowUnicode(System.IntPtr)">
            <summary>
            ユニコードウィンドウであるか。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <returns>ユニコードウィンドウであるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetKeyboardState(System.Byte[])">
            <summary>
            キーボード状態取得。
            </summary>
            <param name="keys">キーボード状態。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SetKeyboardState(System.Byte[])">
            <summary>
            キーボード状態設定。
            </summary>
            <param name="keys">キーボード状態。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowLongPtr(System.IntPtr,System.Int32)">
            <summary>
            指定されたウィンドウに関する情報を取得します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="nIndex">操作種別。</param>
            <returns>結果。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowLongPtr64(System.IntPtr,System.Int32)">
            <summary>
            指定されたウィンドウに関する情報を取得します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="nIndex">操作種別。</param>
            <returns>結果</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowLongPtr32(System.IntPtr,System.Int32)">
            <summary>
            指定されたウィンドウに関する情報を取得します。
            </summary>
            <param name="hWnd">ウィンドウハンドル。</param>
            <param name="nIndex">操作種別。</param>
            <returns>結果</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.SetWindowsHookEx(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.HookProc,System.IntPtr,System.Int32)">
            <summary>
            ウィンドウフックの設定
            </summary>
            <param name="hookType">フック種別</param>
            <param name="lpfn">コールバック</param>
            <param name="hMod">モジュールハンドル</param>
            <param name="dwThreadId">スレッドID</param>
            <returns>フックハンドル</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            アンフック
            </summary>
            <param name="hookHandle">フックハンドル</param>
            <returns>成否</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            次のフック呼び出し
            </summary>
            <param name="hookHandle">フックハンドル</param>
            <param name="nCode">コード</param>
            <param name="wParam">wParam</param>
            <param name="lParam">lParam</param>
            <returns>結果</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.GetWindowThreadProcessId(System.IntPtr,System.Int32@)">
            <summary>
            指定のウィンドウハンドルの所属するスレッドとプロセスの取得
            </summary>
            <param name="hWnd">ウィンドウハンドル</param>
            <param name="lpdwProcessId">プロセスID</param>
            <returns>スレッドID</returns>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.HookProc">
            <summary>
            フックプロック
            </summary>
            <param name="code">コード</param>
            <param name="wParam">wParam</param>
            <param name="lParam">lParam</param>
            <returns>結果</returns>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.CWPSTRUCT">
            <summary>
            WndProcメッセージ情報
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.NativeMethods.MSG">
            <summary>
            メッセージ情報
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Inside.Initializer">
            <summary>
            初期化。
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.Inside.Initializer.Initialize(Codeer.Friendly.Windows.WindowsAppFriend,System.Type)">
            <summary>
            初期化。対象のアプリケーションにアセンブリを読み込ませます。
            </summary>
            <param name="app">アプリケーション操作クラス。</param>
            <param name="myType">タイプ。</param>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVITEM">
            <summary>
            Please refer to MSDN's LVITEM.
            In order to ensure the optimal size within the library when obtaining strings, does not use cchTextMax. 
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.LVITEM_CORE">
            <summary>
            Please refer to MSDN's LVITEM.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox">
            <summary>
            Allows interacting with message boxes.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="window">The message box's main window.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox.EmulateButtonClick(System.String)">
            <summary>
            Clicks the button with the indicated text.
            </summary>
            <param name="buttonWindowText">The text of the button. </param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox.Window">
            <summary>
            Returns a WindowControl object for the main window.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox.Title">
            <summary>
            Returns the message box's title (caption). 
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMessageBox.Message">
            <summary>
            Returns the message box's message.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress">
            <summary>
            Provides operations on windows of WindowClass type msctls_progress32.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeWindow">
            <summary>
            Allows interacting with native windows.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeWindow.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeWindow.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeWindow.Visible">
            <summary>
            Returns a value indicating whether the control and all of its parent controls are displayed.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeWindow.Enabled">
            <summary>
            Returns a value indicating whether the control can respond to user interaction.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress.Min">
            <summary>
            Returns the minimum value.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress.Max">
            <summary>
            Returns the maximum value.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeProgress.Pos">
            <summary>
            Returns the current value (position).
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar">
            <summary>
            Provides operations on windows of WindowClass type ScrollBar.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.GetScrollRange(System.Int32@,System.Int32@)">
            <summary>
            Obtains the scroll bar's scroll range.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.EmulateScroll(System.Int32)">
            <summary>
            Sets the current scroll position.
            Produces a WM_HSCROLL or WM_VSCROLL notification.
            Uses SB_THUMBTRACK type scrolling.
            </summary>
            <param name="pos">The position to set</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.EmulateScroll(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Sets the current scroll position.
            Produces a WM_HSCROLL or WM_VSCROLL notification.
            Uses SB_THUMBTRACK type scrolling.
            Executes asynchronously. 
            </summary>
            <param name="pos">The position to set</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.EmulateScrollInTarget(System.IntPtr,System.Boolean,System.Int32)">
            <summary>
            スクロールバーの現在位置を設定のための通知を発生させます。
            WM_HSCROLL、もしくはWM_VSCROLLの通知が発生します。
            スクロールのタイプはSB_THUMBTRACKです。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="isVertical">縦スクロールバーであるか。</param>
            <param name="pos">現在位置。</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.IsVertical">
            <summary>
            Returns true if the scroll bar is vertical.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeScrollBar.ScrollPos">
            <summary>
            Returns the current position of the scroll bar.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker">
            <summary>
            Provides operations on windows whose WindowClass is SysDateTimePick32.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.EmulateSelectDay(System.DateTime)">
            <summary>
            Sets the selected DateTime.
            Notifies DTN_DATETIMECHANGE.
            </summary>
            <param name="day">DateTime to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.EmulateSelectDay(System.DateTime,Codeer.Friendly.Async)">
            <summary>
            Sets the selected DateTime.
            Notifies DTN_DATETIMECHANGE.
            Executes asynchronously. 
            </summary>
            <param name="day">DateTime to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.EmulateSelectDayInTarget(System.IntPtr,System.DateTime)">
            <summary>
            現在時間を設定します。
            DTN_DATETIMECHANGEの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="day">選択する日時。</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeDateTimePicker.SelectedDay">
            <summary>
            Returns the selected DateTime.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeButton">
            <summary>
            Provides operations on windows of WindowClass type Button. 
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateClick">
            <summary>
            Performs a click and notifies BN_CLICKED.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateClick(Codeer.Friendly.Async)">
            <summary>
            Performs a click and notifies BN_CLICKED.
            Executes asynchronously. 
            </summary>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateCheck(System.Windows.Forms.CheckState)">
            <summary>
            Sets the object's check state. 
            If the state changes, BN_CLICKED is notified.
            </summary>
            <param name="state">Check state.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateCheck(System.Windows.Forms.CheckState,Codeer.Friendly.Async)">
            <summary>
            Sets the object's check state. 
            If the state changes, BN_CLICKED is notified.
            Executes asynchronously. 
            </summary>
            <param name="state">Check state.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateClickInTarget(System.IntPtr)">
            <summary>
            クリック。
            BN_CLICKEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.EmulateCheckInTarget(System.IntPtr,System.Windows.Forms.CheckState)">
            <summary>
            チェック状態設定。
            状態が変更された場合、BN_CLICKEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="state">チェック状態。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.GetCheckStateInTarget(System.IntPtr)">
            <summary>
            チェック状態取得。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>チェック状態</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeButton.CheckState">
            <summary>
            Returns the object's check state.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit">
            <summary>
            Provides operations on windows of WindowClass type Edit, RichEdit20A, and RichEdit20W.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.GetSelection(System.Int32@,System.Int32@)">
            <summary>
            Returns the current selection range.
            </summary>
            <param name="startChar">Starting character index of the current selection.</param>
            <param name="endChar">Ending character index of the current selection.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeText(System.String)">
            <summary>
            Changes the control's text.
            Notifies EN_CHANGE and EN_UPDATE.
            For RichEdit20A and RichEdit20W, notice only occurs when the event mask is set..
            </summary>
            <param name="newText">New text</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeText(System.String,Codeer.Friendly.Async)">
            <summary>
            Changes the control's text.
            Notifies EN_CHANGE and EN_UPDATE.
            For RichEdit20A and RichEdit20W, notice only occurs when the event mask is set..
            Executes asynchronously. 
            </summary>
            <param name="newText">New text</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeSelection(System.Int32,System.Int32)">
            <summary>
            Changes the text selection.
            Selects all text when startChar is 0 and endChar is -1. Cancels the current selection when startChar is -1.
            For RichEdit20A and RichEdit20W, notifies EN_SELCHANGE if the event mask is set.
            </summary>
            <param name="startChar">Character index of the beginning of the selection.</param>
            <param name="endChar">Character index of the end of the selection.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeSelection(System.Int32,System.Int32,Codeer.Friendly.Async)">
            <summary>
            Changes the text selection.
            Selects all text when startChar is 0 and endChar is -1. Cancels the current selection when startChar is -1.
            For RichEdit20A and RichEdit20W, notifies EN_SELCHANGE if the event mask is set.
            Executes asynchronously. 
            </summary>
            <param name="startChar">Character index of the beginning of the selection.</param>
            <param name="endChar">Character index of the end of the selection.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeTextInTarget(System.IntPtr,System.String)">
            <summary>
            テキストを変更します。
            EN_UPDATE、EN_CHANGEの通知が発生します。
            RichEdit20A、RichEdit20Wの場合は、イベントマスクが設定されている場合のみ通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="newText">新たなテキスト。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.EmulateChangeSelectionInTarget(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            選択を設定します。
            開始位置が0で終了位置が-1のときは、すべてのテキストが選択されます。開始位置が-1のときは、現在の選択が解除されます。
            RichEdit20A、RichEdit20Wの場合は、イベントマスクが設定されていれば、EN_SELCHANGEの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="startChar">開始文字列。</param>
            <param name="endChar">終了文字列。</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.Text">
            <summary>
            Returns the contained text.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.LineCount">
            <summary>
            Returns the number of lines of text.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeEdit.FirstVisibleLine">
            <summary>
            Returns the number of the first visible line.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress">
            <summary>
            Provides operations on windows of WindowClass type SysIPAddress32.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.GetAddress(System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            Returns the entered IP address.
            </summary>
            <param name="field0">Field 0 octet.</param>
            <param name="field1">Field 1 octet.</param>
            <param name="field2">Field 2 octet.</param>
            <param name="field3">Field 3 octet.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.EmulateChangeAddress(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Changes the entered IP address.
            Causes an IPN_FIELDCHANGED notification.
            </summary>
            <param name="field0">Field 0 octet.</param>
            <param name="field1">Field 1 octet.</param>
            <param name="field2">Field 2 octet.</param>
            <param name="field3">Field 3 octet.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.EmulateChangeAddress(System.Byte,System.Byte,System.Byte,System.Byte,Codeer.Friendly.Async)">
            <summary>
            Changes the entered IP address.
            Causes an IPN_FIELDCHANGED notification.
            Executes asynchronously. 
            </summary>
            <param name="field0">Field 0 octet.</param>
            <param name="field1">Field 1 octet.</param>
            <param name="field2">Field 2 octet.</param>
            <param name="field3">Field 3 octet.</param>
            <param name="async"> Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.EmulateChangeAddressInTarget(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            IPアドレスを変更します。
            IPN_FIELDCHANGEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="field0">フィールド0。</param>
            <param name="field1">フィールド1。</param>
            <param name="field2">フィールド2。</param>
            <param name="field3">フィールド3。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeIPAddress.GetAddressInTarget(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            IPアドレスを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="field0">フィールド0。</param>
            <param name="field1">フィールド1。</param>
            <param name="field2">フィールド2。</param>
            <param name="field3">フィールド3。</param>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox">
            <summary>
            Provides operations on windows of WindowClass type ListBox.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetItemData(System.Int32)">
            <summary>
            Returns the data for the indicated item.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>Item data.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetItemText(System.Int32)">
            <summary>
            Returns the text of the indicated item.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>Item text.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.FindItem(System.Int32,System.String)">
            <summary>
            Finds an item with the indicated text.
            </summary>
            <param name="findStart">Index where searching should start.</param>
            <param name="text">Text to search for.</param>
            <returns>Index of the item found. Returns -1 if the item is not found.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetItemRect(System.Int32)">
            <summary>
            Returns the client rectangle of the item with the indicated index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>Returns -1 in the case of failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.SetTopIndex(System.Int32)">
            <summary>
            Scrolls the list so that the item with the indicated index is the top item.
            When it is not possible to show the indicated item at the top, the list is scrolled so that the indicated item is visible.        /// </summary>
            <param name="index">head index.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeCurrentSelectedIndex(System.Int32)">
            <summary>
            Changes the currently selected index.
            Causes a LBN_SELCHANGE notification.
            Please use EmulateChangeSelect for multiple selection list boxes.
            </summary>
            <param name="index">Index to select.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeCurrentSelectedIndex(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Changes the currently selected index.
            Causes a LBN_SELCHANGE notification.
            Please use EmulateChangeSelect for multiple selection list boxes.
            Executes asynchronously. 
            </summary>
            <param name="index">Index to select.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeSelect(System.Int32,System.Boolean)">
            <summary>
            Sets the selected state of a specific item in the control.
            Causes a LBN_SELCHANGE notification.
            Please use EmulateChangeCurrentSelectedIndex for single selection list boxes.
            </summary>
            <param name="index">Index of the item.</param>
            <param name="isSelect">Selects the item if true, deselects it if false.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeSelect(System.Int32,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            Sets the selected state of a specific item in the control.
            Causes a LBN_SELCHANGE notification.
            Please use EmulateChangeCurrentSelectedIndex for single selection list boxes.
            Executes asynchronously. 
            </summary>
            <param name="index">Index of the item.</param>
            <param name="isSelect">Selects the item if true, deselects it if false.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetSelectedIndicesInTarget(System.IntPtr)">
            <summary>
            現在選択されているアイテムのインデックスの配列です。
            単一選択リストボックスの場合はCurrentSelectedIndexを使用してください。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>現在選択されているアイテムのインデックスの配列。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.FindItemInTarget(System.IntPtr,System.Int32,System.String)">
            <summary>
            指定のテキストのアイテムを検索します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="findStart">検索開始インデックス。</param>
            <param name="text">テキスト。</param>
            <returns>アイテムインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetTextInTarget(System.IntPtr,System.Int32)">
            <summary>
            指定のインデックスのテキストを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">インデックス。</param>
            <returns>テキスト。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeCurrentSelectedIndexInTarget(System.IntPtr,System.Int32)">
            <summary>
            現在選択されているインデックスを設定します。
            LBN_SELCHANGEの通知が発生します。
            複数選択リストボックスの場合はEmulateChangeSelectを使用してください。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">選択インデックス。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.EmulateChangeSelectInTarget(System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            指定のインデックスのアイテムの選択状態を変更します。
            LBN_SELCHANGEの通知が発生します。
            単一選択リストボックスの場合はEmulateChangeCurrentSelectedIndexInTargetを使用してください。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">インデックス。</param>
            <param name="isSelect">選択状態にする場合はtrueを設定します。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.GetCurrentSelectedIndexInTarget(System.IntPtr)">
            <summary>
            現在の選択インデックスを取得する。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>現在の選択インデックス。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.Count">
            <summary>
            Returns the number of items in the control.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.CurrentSelectedIndex">
            <summary>
            Returns the currently selected index.
            Please use SelectedIndices for multiple selection listboxes.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.SelectedIndices">
            <summary>
            Returns an array of all selected indices.
            Please use CurrentSelectedIndex for single selection listboxes.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListBox.TopIndex">
            <summary>
            Returns the index of the top item displayed in the list box.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl">
            <summary>
            Provides operations on windows of WindowClass type SysListView32.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItem(Codeer.Friendly.Windows.NativeStandardControls.LVITEM)">
            <summary>
            Obtains an item.
            </summary>
            <param name="item">The item.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemState(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS)">
            <summary>
            Obtains an item's state.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="stateMask">State mask.</param>
            <returns>Item state.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemRect(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIR)">
            <summary>
            Returns an item's bounds.
            </summary>
            <param name="itemIndex">Item rectangle.</param>
            <param name="area">Specifies for which portion bounds should be obtained.</param>
            <returns>Item rectangle.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetSubItemRect(System.Int32,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIR)">
            <summary>
            Returns the bounds of a subitem.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="subItemIndex">Sub-item index.</param>
            <param name="area">Specifies for which portion bounds should be obtained.</param>
            <returns>Subitem rectangle.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetColumn(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVCOLUMN)">
            <summary>
            Obtains column information.
            </summary>
            <param name="col">Column.</param>
            <param name="column">Column information.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemText(System.Int32,System.Int32)">
            <summary>
            Gets the text for an item.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="subItemIndex">Sub-item index.</param>
            <returns>Item text.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.FindItem(System.Int32,System.Int32,System.String)">
            <summary>
            Finds an item with the indicated text.
            </summary>
            <param name="findStart">Index where searching should start.</param>
            <param name="targetSubItemIndex">Sub-item index of the target item.</param>
            <param name="text">Text to search for.</param>
            <returns>Index of the item found. Returns -1 if the item was not found.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemData(System.Int32)">
            <summary>
            Returns item data.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <returns>Item data.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EnsureVisible(System.Int32,System.Boolean)">
            <summary>
            Displays the indicated item in a visible region.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="partialOK">Indicates whether partial display is permissible.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItem(Codeer.Friendly.Windows.NativeStandardControls.LVITEM)">
            <summary>
            Changes the contents of an item.
            Causes a notice according to the changes.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItem(Codeer.Friendly.Windows.NativeStandardControls.LVITEM,Codeer.Friendly.Async)">
            <summary>
            Changes the contents of an item.
            Causes a notice according to the changes.
            Executes asynchronously. 
            </summary>
            <param name="item">Item.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateEdit(System.Int32,System.String)">
            <summary>
            Edits an item in the list.
            Causes an LVN_BEGINLABELEDIT and LVN_ENDLABELEDIT notification.
            </summary>
            <param name="itemIndex">Index of the item to change.</param>
            <param name="text">Text to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateEdit(System.Int32,System.String,Codeer.Friendly.Async)">
            <summary>
            Edits an item in the list.
            Causes an LVN_BEGINLABELEDIT and LVN_ENDLABELEDIT notification.
            Executes asynchronously. 
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="text">Text to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateCancelEdit">
            <summary>
            Cancels editing.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateCancelEdit(Codeer.Friendly.Async)">
            <summary>
             Cancels editing asynchronously.
            </summary>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateSelect(System.Int32,System.Boolean)">
            <summary>
            Changes the selection state of an item.
            Causes an LVN_ITEMCHANGING and LVN_ITEMCHANGED notification.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="isSelect">State to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateSelect(System.Int32,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            Changes the selection state of an item.
            Causes an LVN_ITEMCHANGING and LVN_ITEMCHANGED notification.
            Executes asynchronously. 
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="isSelect">State to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItemState(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS,Codeer.Friendly.Windows.NativeStandardControls.LVIS)">
            <summary>
            Changes an item's state.
            Causes an LVN_ITEMCHANGING and LVN_ITEMCHANGED notice.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="mask">State mask.</param>
            <param name="state">State.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItemState(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS,Codeer.Friendly.Windows.NativeStandardControls.LVIS,Codeer.Friendly.Async)">
            <summary>
            Changes an item's state.
            Causes an LVN_ITEMCHANGING and LVN_ITEMCHANGED notice.
            Executes asynchronously.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <param name="mask">State mask.</param>
            <param name="state">State.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItemStateInTarget(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS,Codeer.Friendly.Windows.NativeStandardControls.LVIS)">
            <summary>
            状態を変更します。
            LVN_ITEMCHANGING, LVN_ITEMCHANGEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="itemIndex">アイテムインデックス。</param>
            <param name="mask">状態マスク。</param>
            <param name="state">状態。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetColumnInTarget(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVCOLUMN)">
            <summary>
            列情報を取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="col">列。</param>
            <param name="column">列情報。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.FindItemInTarget(System.IntPtr,System.Int32,System.Int32,System.String)">
            <summary>
            指定のテキストのアイテムを検索します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="findStart">検索開始インデックス。</param>
            <param name="targetSubItemIndex">検索対象のサブアイテムインデックス。</param>
            <param name="text">テキスト。</param>
            <returns>アイテムインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemCore(System.Boolean,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.LVITEM)">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="isUni">ユニコードであるか。</param>
            <param name="message">メッセージ。</param>
            <param name="wParam">WPARAM。</param>
            <param name="item">アイテム。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemCoreInTarget(System.IntPtr,System.Boolean,System.Int32,System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.LVITEM)">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="isUni">ユニコードであるか。</param>
            <param name="message">メッセージ。</param>
            <param name="wParam">WPARAM。</param>
            <param name="item">アイテム。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.SelectedIndicesInTarget(System.IntPtr)">
            <summary>
            選択されているアイテムのインデックスを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>選択されているアイテムのインデックス。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetNextItemInTarget(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS)">
            <summary>
            指定の条件を満たすアイテムを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="itemIndex">アイテムインデックス。</param>
            <param name="flags">取得方向フラグ。</param>
            <returns>アイテムインデックス。未発見時は-1を返します。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetFirstSelectedItemPositionInTarget(System.IntPtr)">
            <summary>
            最初に選択した項目の位置を取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>アイテム位置情報。選択されていない場合はIntPtr.Zeroが返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetNextSelectedItemInTarget(System.IntPtr,System.IntPtr@)">
            <summary>
            選択されているアイテムのインデックスを返します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="pos">アイテム位置情報。次の値に更新されます。</param>
            <returns>アイテムインデックス。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateChangeItemInTarget(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.LVITEM)">
            <summary>
            アイテムの内容を変更します。
            LVN_ITEMCHANGING, LVN_ITEMCHANGEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="item">アイテム。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.EmulateEditInTarget(System.IntPtr,System.Int32,System.String,System.Int32[])">
            <summary>
            指定のアイテムを編集します。
            LVN_BEGINLABELEDIT、LVN_ENDLABELEDITが発生します。
            非同期で実行します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="itemIndex">アイテムインデックス。</param>
            <param name="text">テキスト。</param>
            <param name="currentSelected">現在の選択項目。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.GetItemStateInTarget(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.LVIS)">
            <summary>
            アイテム状態を取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="itemIndex">アイテムインデックス。</param>
            <param name="stateMask">状態マスク。</param>
            <returns>アイテム状態。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.ItemCount">
            <summary>
            Returns the number of items in the control.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.SelectedIndices">
            <summary>
            Returns the currently selected indices.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.TopIndex">
            <summary>
            Returns the index of the top item displayed in the list control.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeListControl.View">
            <summary>
            Returns the display mode.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar">
            <summary>
            Provides operations on windows of WindowClass type SysMonthCal32.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.GetSelectionRange(System.DateTime@,System.DateTime@)">
            <summary>
            Obtains the currently selected date range.
            Use this when multiple dates are selected.
            </summary>
            <param name="min">The selection start date.</param>
            <param name="max">The selection end date.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDay(System.DateTime)">
            <summary>
            Sets the selected date.
            Produces MCN_SELCHANGE and MCN_SELECT notifications.
            </summary>
            <param name="day">The date to select.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDay(System.DateTime,Codeer.Friendly.Async)">
            <summary>
            Sets the selected date.
            Produces MCN_SELCHANGE and MCN_SELECT notifications.
            Executes asynchronously. 
            </summary>
            <param name="day">The date to select.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDay(System.DateTime,System.DateTime)">
            <summary>
            Sets the selected date range.
            Use this when selecting multiple dates.
            Produces MCN_SELCHANGE and MCN_SELECT notifications.
            </summary>
            <param name="min">The start date.</param>
            <param name="max">The end date.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDay(System.DateTime,System.DateTime,Codeer.Friendly.Async)">
            <summary>
            Sets the selected date range.
            Use this when selecting multiple dates.
            Produces MCN_SELCHANGE and MCN_SELECT notifications.
            Executes asynchronously. 
            </summary>
            <param name="min">The start date.</param>
            <param name="max">The end date.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateChangeView(Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView)">
            <summary>
            Set's the calendar's display mode.
            Produces a MCN_VIEWCHANGE notification.
            </summary>
            <param name="view">The display mode.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateChangeView(Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView,Codeer.Friendly.Async)">
            <summary>
            Set's the calendar's display mode.
            Produces a MCN_VIEWCHANGE notification.
            Executes asynchronously. 
            </summary>
            <param name="view">The display mode.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.GetSelectionRangeInTarget(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.SYSTEMTIME[])">
            <summary>
            ユーザーによって現在選択されている日付範囲を取得します。
            複数選択の場合に使用します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="minMax">最小日付、最大日付。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDayInTarget(System.IntPtr,System.DateTime)">
            <summary>
            現在の選択日付を設定します。
            MCN_SELCHANGE、MCN_SELECTの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="day">選択する日時。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateSelectDayInTarget(System.IntPtr,System.DateTime,System.DateTime)">
            <summary>
            現在の選択日付を設定します。
            MCN_SELCHANGE、MCN_SELECTの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="min">最小日付。</param>
            <param name="max">最大日付。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.EmulateChangeViewInTarget(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.MonthCalendarView)">
            <summary>
            表示モードを設定します。
            MCN_VIEWCHANGEの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="view">表示モード。</param>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.MaxSelectionCount">
            <summary>
            Returns the maximum number of days that can be selected.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.Today">
            <summary>
            Returns today's date.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.SelectedDay">
            <summary>
            Returns the currently selected date.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.MonthCalendarView">
            <summary>
            Returns the current display mode.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeMonthCalendar.FirstDayOfWeek">
            <summary>
            Returns the day of the week displayed in the leftmost column.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider">
            <summary>
            Provides operations on windows of WindowClass type msctls_trackbar32.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.EmulateChangePos(System.Int32)">
            <summary>
            Sets the currently selected position.
            Produces a WM_HSCROLL or WM_VSCROLL notification.
            Uses SB_THUMBTRACK type scrolling.
            </summary>
            <param name="pos">The position to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.EmulateChangePos(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Sets the currently selected position.
            Produces a WM_HSCROLL or WM_VSCROLL notification.
            Uses SB_THUMBTRACK type scrolling.
            Executes asynchronously. 
            </summary>
            <param name="pos">The position to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.EmulateChangePosInTarget(System.IntPtr,System.Boolean,System.Int32)">
            <summary>
            現在位置を設定します。
            WM_HSCROLL、もしくはWM_VSCROLLの通知が発生します。
            スクロールのタイプはSB_THUMBTRACKです。
            Notify設定がある場合はTRBN_THUMBPOSCHANGINGの通知も発生します。
            nReasonはTB_THUMBTRACKです。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="isVertical">縦方向か。</param>
            <param name="pos">現在位置。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.GetPosInTarget(System.IntPtr)">
            <summary>
            現在位置を取得。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>現在位置。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.IsVertical">
            <summary>
            Returns true if this is a vertical slider.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.Min">
            <summary>
            Returns the minimum value.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.Max">
            <summary>
            Returns the maximum value.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeSlider.Pos">
            <summary>
            Returns the current position.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton">
            <summary>
            Provides operations on windows of WindowClass type msctls_updown32.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.GetRange(System.Int32@,System.Int32@)">
            <summary>
            Obtains the selected range.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.EmulateChangePos(System.Int32)">
            <summary>
            Sets the current position.
            Produces a UDN_DELTAPOS notification.
            Also produces EN_CHANGE and EN_UPDATE notifications as a pair.
            Also produces a WM_VSCROLL notification.
            </summary>
            <param name="pos">Position to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.EmulateChangePos(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Sets the current position.
            Produces a UDN_DELTAPOS notification.
            Also produces EN_CHANGE and EN_UPDATE notifications as a pair.
            Also produces a WM_VSCROLL notification.
            Executes asynchronously. 
            </summary>
            <param name="pos">Position to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.EmulateChangePosInTarget(System.IntPtr,System.Int32)">
            <summary>
            現在位置を設定します。
            現在の設定と異なる場合、UDN_DELTAPOSの通知が発生します。
            また、ペアとなるEditにEN_CHANGE、EN_UPDATEの通知が発生します。
            また、WM_VSCROLLの通知も発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="pos">現在位置。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.GetPosInTarget(System.IntPtr)">
            <summary>
            現在位置を取得。
            </summary>
            <param name="handle">ハンドル。</param>
            <returns>現在位置。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeSpinButton.Pos">
            <summary>
            Returns the current position.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeTab">
            <summary>
            Provides operations on windows of WindowClass type SysTabControl32.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.GetItemText(System.Int32)">
            <summary>
            Obtains the text for a certain tab item.
            </summary>
            <param name="tabIndex">Tab index.</param>
            <returns>Tab text.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.GetItemData(System.Int32)">
            <summary>
            Obtains tab item data.
            </summary>
            <param name="tabIndex">Tab index.</param>
            <returns>Item data.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.GetItem(System.Int32,Codeer.Friendly.Windows.NativeStandardControls.TCITEM)">
            <summary>
            Gets a certain tab item.
            </summary>
            <param name="tabIndex">Tab index.</param>
            <param name="item">Item storage buffer.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.EmulateSelectItem(System.Int32)">
            <summary>
            Sets the selected tab.
            Produces TCN_SELCHANGING and TCN_SELCHANGE notifications if the selection changes.
            </summary>
            <param name="index">Index to select.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.EmulateSelectItem(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Sets the selected tab.
            Produces TCN_SELCHANGING and TCN_SELCHANGE notifications if the selection changes.
            Executes asynchronously. 
            </summary>
            <param name="index">Index to select.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.GetItemInTarget(System.IntPtr,System.Int32,Codeer.Friendly.Windows.NativeStandardControls.TCITEM)">
            <summary>
            アイテムを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="tabIndex">タブインデックス。</param>
            <param name="item">アイテム。</param>
            <returns>成否。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.EmulateSelectItemInTarget(System.IntPtr,System.Int32)">
            <summary>
            タブを選択します。
            選択位置の変更があった場合、TCN_SELCHANGING、TCN_SELCHANGEの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">アイテムのインデックス。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.SendNotify(System.IntPtr,System.Int32)">
            <summary>
            WM_NOTIFYを通知します。
            対象アプリケーション内部で実行する必要があります。
            </summary>
            <param name="handle">ハンドル。</param>
            <param name="code">通知コード。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.GetSelectedItemIndexInTarget(System.IntPtr)">
            <summary>
            現在選択されているタブのインデックスを取得。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>現在選択されているタブのインデックス。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.ItemCount">
            <summary>
            Returns the number of tabs.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeTab.SelectedItemIndex">
            <summary>
            Returns the index of the selected tab.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeTree">
            <summary>
            Provides operations on windows of WindowClass type SysTreeView32.
            </summary>    
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetChildNodes(System.IntPtr)">
            <summary>
            Returns the child nodes of the indicated node.
            </summary>
            <param name="hParentItem">Parent item handle.</param>
            <returns>The item handles of the child nodes.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetBrotherNodes(System.IntPtr)">
            <summary>
            Returns sibling nodes of the indicated node.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>The item handles of the nodes at the same level as the indicated node.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetParentNode(System.IntPtr)">
            <summary>
            Returns an item's parent node.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>The item handle of the parent node.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.FindNode(System.String[])">
            <summary>
            Searches for a node.
            </summary>
            <param name="nodeText">The text of each node.</param>
            <returns>The item handle of the found node or IntPtr.Zero if it is not found.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.FindNode(System.Int32[])">
            <summary>
            Searches for a node.
            </summary>
            <param name="nodeIndex"> The index of each node.</param>
            <returns>The item handle of the found node or IntPtr.Zero if it is not found.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItem(Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX)">
            <summary>
            Obtains item information.
            </summary>
            <param name="item">Item information.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItemText(System.IntPtr)">
            <summary>
            Obtains an item's text.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>Item text.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItemData(System.IntPtr)">
            <summary>
            Obtains item data for an indicated item.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>Item data.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItemRect(System.IntPtr,System.Boolean)">
            <summary>
            Obtains an item's bounds.
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="isTextOnly">True to obtain bounds of only the text portion.</param>
            <returns>Item boundary rectangle.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.IsExpanded(System.IntPtr)">
            <summary>
            Returns the indicated item's collapse/expand state.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>True if the item is expanded, false if not.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.IsChecked(System.IntPtr)">
            <summary>
            Returns the indicated item's check state.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>True if checked, false if unchecked.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EnsureVisible(System.IntPtr)">
            <summary>
            Makes the indicated item visible.
            </summary>
            <param name="hItem">Item handle.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateChangeItem(Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX)">
            <summary>
            Sets the value of an item.
            Produces TVN_ITEMCHANGING and TVN_ITEMCHANGED notifications when the information in connection with a state changes, depending on the setup of the control.
            </summary>
            <param name="item">Item information.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateChangeItem(Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX,Codeer.Friendly.Async)">
            <summary>
            Sets the value of an item.
            Produces TVN_ITEMCHANGING and TVN_ITEMCHANGED notifications when the information in connection with a state changes, depending on the setup of the control.
            Executes asynchronously. 
            </summary>
            <param name="item">Item information.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateExpand(System.IntPtr,System.Boolean)">
            <summary>
            Sets the expanded or collapsed state of an item.
            Produces TVN_ITEMEXPANDING and TVN_ITEMEXPANDED notifications if the state changes.
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="isExpanded"> True to expand.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateExpand(System.IntPtr,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            Sets the expanded or collapsed state of an item.
            Produces TVN_ITEMEXPANDING and TVN_ITEMEXPANDED notifications if the state changes.
            Executes asynchronously. 
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="isExpanded"> True to expand.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateCheck(System.IntPtr,System.Boolean)">
            <summary>
            Sets the check state of the indicated item.
            Produces TVN_ITEMCHANGING and TVN_ITEMCHANGED notifications if the check state changes, depending on the setup of the control.
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="check">True to check.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateCheck(System.IntPtr,System.Boolean,Codeer.Friendly.Async)">
            <summary>
            Sets the check state of the indicated item.
            Produces TVN_ITEMCHANGING and TVN_ITEMCHANGED notifications if the check state changes, depending on the setup of the control.
            Executes asynchronously. 
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="check">True to check.</param>
            <param name="async">Asynchronous execution object.</param>
            <returns>Success or failure.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateSelectItem(System.IntPtr)">
            <summary>
            Sets the selected item.
            Produces TVN_SELCHANGING and TVN_SELCHANGED notifications if the selection state changes.
            </summary>
            <param name="hItem">Item handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateSelectItem(System.IntPtr,Codeer.Friendly.Async)">
            <summary>
            Sets the selected item.
            Produces TVN_SELCHANGING and TVN_SELCHANGED notifications if the selection state changes.
            Executes asynchronously. 
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateEdit(System.IntPtr,System.String)">
            <summary>
            Edits the text of the indicated item.
            Produces TVN_BEGINLABELEDIT and TVN_ENDLABELEDIT notifications.
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="text">Text to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateEdit(System.IntPtr,System.String,Codeer.Friendly.Async)">
            <summary>
            Edits the text of the indicated item.
            Produces TVN_BEGINLABELEDIT and TVN_ENDLABELEDIT notifications.
            Executes asynchronously. 
            </summary>
            <param name="hItem">Item handle.</param>
            <param name="text">Text to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateCancelEdit">
            <summary>
            Cancels editing.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateCancelEdit(Codeer.Friendly.Async)">
            <summary>
             Cancels editing asynchronously.
            </summary>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItemInTarget(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX)">
            <summary>
            アイテム情報を取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="item">アイテム情報。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetRootNodesInTarget(System.IntPtr)">
            <summary>
            トップレベルのノードのアイテムハンドルを取得します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <returns>トップレベルのノードのアイテムハンドル。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetChildNodesInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムの子ノードを取得します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="hParentItem">親アイテムハンドル。</param>
            <returns>子ノードのアイテムハンドル。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetBrotherNodesInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムと同列のノードを取得します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <returns>指定のアイテムと同列のノードのアイテムハンドル。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.FindNodeInTarget(System.IntPtr,System.String[])">
            <summary>
            ノードを検索します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="nodeText">各ノードのテキスト。</param>
            <returns>検索されたノードのアイテムハンドル。未発見時はIntPtr.Zeroが返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.FindNodeInTarget(System.IntPtr,System.Int32[])">
            <summary>
            ノードを検索します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="nodeIndex">各ノードでのインデックス。</param>
            <returns>検索されたノードのアイテムハンドル。未発見時はIntPtr.Zeroが返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetNextItemInTarget(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            hItemとcodeで指定された関係のアイテムを取得します。
            </summary>
            <param name="treeeHandle">ツリーのウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <param name="code">取得する種類。</param>
            <returns>hItemとcodeで指定された関係のアイテム。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateChangeItemInTarget(System.IntPtr,Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX)">
            <summary>
            アイテム情報を設定します。
            状態にかかわる情報が変化した場合、コントロールの設定によっては、TVN_ITEMCHANGING、TVN_ITEMCHANGEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="item">アイテム情報。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.CreateCheckChangeItem(System.IntPtr,System.Boolean)">
            <summary>
            チェック状態を変更するためのアイテムを作成します。
            </summary>
            <param name="hItem">アイテムハンドル。</param>
            <param name="check">チェック状態。</param>
            <returns>アイテム。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateExpandInTarget(System.IntPtr,System.IntPtr,System.Boolean,System.Boolean)">
            <summary>
            指定のアイテムの展開状態を変更します。
            展開状態に変化があれば、TVN_ITEMEXPANDING、TVN_ITEMEXPANDEDの通知が発生します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <param name="isExpanded">現在の展開状態。</param>
            <param name="isExpandedNext">次の展開状態。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.NotifyExpandInTarget(System.Boolean,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
            展開通知
            </summary>
            <param name="isBefore">展開前通知であるか。</param>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <param name="action">動作。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.IsExpandedOnce(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムが展開状態であるかを取得します。
            </summary>
            <param name="wndHandle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <returns>指定のアイテムが展開状態であるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateEditInTarget(System.IntPtr,System.IntPtr,System.String)">
            <summary>
            指定のアイテムを編集します。
            TVN_BEGINLABELEDIT、TVN_ENDLABELEDITが発生します。
            非同期で実行します。
            </summary>
            <param name="windowHandle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <param name="text">テキスト。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.EmulateSelectItemInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムを選択状態にします。
            選択状態が変化した場合、TVN_SELCHANGING、TVN_SELCHANGEDの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.IsCheckedInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムがチェック状態であるかを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <returns>チェック状態であるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.IsExpandedInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            指定のアイテムが展開状態であるかを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <returns>指定のアイテムが展開状態であるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.GetItemTextInTarget(System.IntPtr,System.IntPtr)">
            <summary>
            アイテムテキストの取得。
            </summary>
            <param name="Handle">ウィンドウハンドル。</param>
            <param name="hItem">アイテムハンドル。</param>
            <returns>アイテムテキスト。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.SelectedItem">
            <summary>
            Returns the item handle of the selected item.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeTree.Nodes">
            <summary>
            Returns the item handles of the top-level nodes.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMDATETIMECHANGE">
            <summary>
            Please refer to MSDN's NMDATETIMECHANGE.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMHDR">
            <summary>
            Please refer to MSDN's NMHDR.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMIPADDRESS">
            <summary>
            Please refer to MSDN's LVCOLUMN.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMLISTVIEW">
            <summary>
            Please refer to MSDN's NMLISTVIEW.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMSELCHANGE">
            <summary>
            Please refer to MSDN's LVCOLUMN.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMTRBTHUMBPOSCHANGING">
            <summary>
            Please refer to MSDN's NMTRBTHUMBPOSCHANGING.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMTREEVIEW">
            <summary>
            Please refer to MSDN's NMTREEVIEW.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMTVDISPINFO">
            <summary>
            Please refer to MSDN's NMTVDISPINFO.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NMUPDOWN">
            <summary>
            Please refer to MSDN's NMTVDISPINFO.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.POINT">
            <summary>
            Please refer to MSDN's POINT.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.Properties.Resources.CheckStateIsNotSupported">
             <summary>
               The appointed check state is not supported.
            In the case of a radio button, a check cannot be turned OFF.
            Please turn OFF the appointed radio button by turning ON the check of other radio buttons. に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.Properties.Resources.SpinButtonHasNoBuddy">
            <summary>
              Corresponding edit box does not exist. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.RECT">
            <summary>
            Please refer to MSDN's RECT.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.SYSTEMTIME">
            <summary>
            Please refer to MSDN's SYSTEMTIME.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TCIF">
            <summary>
            Please refer to MSDN's TCIF_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TCIS">
            <summary>
            Please refer to MSDN's TCIS_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TCITEM">
            <summary>
            Please refer to MSDN's TCITEM.
            In order to ensure the optimal size within the library when obtaining strings, does not use cchTextMax. 
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TCITEM_CORE">
            <summary>
            Please refer to MSDN's TCITEM.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVHITTESTINFO">
            <summary>
            Please refer to MSDN's TVHITTESTINFO.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVIF">
            <summary>
            Please refer to MSDN's TVIF_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVIS">
            <summary>
            Please refer to MSDN's TVIS_...
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX">
            <summary>
            Please refer to MSDN's TVITEM.
            In order to ensure the optimal size within the library when obtaining strings, does not use cchTextMax. 
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX_CORE">
            <summary>
            Please refer to MSDN's TVITEM.
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.TVITEMEX_CORE.GetTVITEMEX(Codeer.Friendly.Windows.NativeStandardControls.TVITEM@)">
            <summary>
            Get TVITEM.
            </summary>
            <param name="item">TVITEM.</param>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox">
            <summary>
            Provides operations on windows whose WindowClass is ComboBox orComboBoxEx32. 
            </summary>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.#ctor(Codeer.Friendly.Windows.Grasp.WindowControl)">
            <summary>
            Constructor.
            </summary>
            <param name="src">WindowControl with the target window. </param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.#ctor(Codeer.Friendly.Windows.WindowsAppFriend,System.IntPtr)">
            <summary>
            Constructor.
            </summary>
            <param name="app">Application manipulation object.</param>
            <param name="windowHandle">Window handle.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.GetItemData(System.Int32)">
            <summary>
            The 32-bit value can be set with the dwItemData parameter of a SetItemData member function call. Uses the GetItemDataPtr member function if the 32-bit value to be retrieved is a pointer (void*).
            </summary>
            <param name="index">The zero-based index of an item in the combo box's list box.</param>
            <returns>The 32-bit value associated with the item, or CB_ERR if an error occurs.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.GetItemText(System.Int32)">
            <summary>
            Returns the text for the indicated item. 
            </summary>
            <param name="index">Target index.</param>
            <returns>Text of the item.</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.FindItem(System.Int32,System.String)">
            <summary>
            Searches for an item with the indicated text. 
            </summary>
            <param name="findStart">Index where searching should start.</param>
            <param name="text">Target text.</param>
            <returns>
            Index of the found item.
            Returns -1 if the item is not found. 
            </returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateSelectItem(System.Int32)">
            <summary>
            Sets the selected item.
            If the selected index is changed, CBN_SELENDOK and CBN_SELCHANGE are notified.
            For a ComboBoxEx32 that is not a dropdown list, CBN_EDITCHANGE is notified as well.
            </summary>
            <param name="index">Index of the item to select.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateSelectItem(System.Int32,Codeer.Friendly.Async)">
            <summary>
            Sets the selected item.
            If the selected index is changed, CBN_SELENDOK and CBN_SELCHANGE are notified.
            For a ComboBoxEx32 that is not a dropdown list, CBN_EDITCHANGE is notified as well.
            Executes asynchronously. 
            </summary>
            <param name="index">Index of the item to select.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeEditText(System.String)">
            <summary>
            Changes the editor text.
            Notifies CBN_EDITCHANGE.
            If the window is a ComboBox, CBN_EDITUPDATE is notified as well.
            </summary>
            <param name="newText">The text to set.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeEditText(System.String,Codeer.Friendly.Async)">
            <summary>
            Changes the editor text.
            Notifies CBN_EDITCHANGE.
            If the window is a ComboBox, CBN_EDITUPDATE is notified as well.
            Executes asynchronously. 
            </summary>
            <param name="newText">The text to set.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeDropDownVisible(System.Boolean)">
            <summary>
            Changes the DropDown Visible state. 
            If a dropdown is opened, CBN_DROPDOWN is notified.
            If a drop down is closed, CBN_CLOSEUP is notified.
            </summary>
            <param name="visible">Visible state of the window.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeDropDownVisible(System.Boolean,Codeer.Friendly.Async)">
            <summary>
            Changes the DropDown Visible state. 
            If a dropdown is opened, CBN_DROPDOWN is notified.
            If a drop down is closed, CBN_CLOSEUP is notified.
            Executes asynchronously. 
            </summary>
            <param name="visible">Visible state of the window.</param>
            <param name="async">Asynchronous execution object.</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.GetLBTextInTarget(System.IntPtr,System.Int32)">
            <summary>
            指定のインデックスのテキストを取得します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">インデックス。</param>
            <returns>テキスト。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.FindItemInTarget(System.IntPtr,System.Int32,System.String)">
            <summary>
            指定のテキストのアイテムを検索します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="findStart">検索開始インデックス。</param>
            <param name="text">テキスト。</param>
            <returns>アイテムインデックス。未発見時は-1が返ります。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateSelectItemInTarget(System.IntPtr,System.Int32)">
            <summary>
            アイテムを選択します。
            選択位置の変更があった場合、CBN_SELENDOK、CBN_SELCHANGEの通知が発生します。
            ComboBoxEx32でドロップダウンリストでない場合はCBN_EDITCHANGEも発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="index">アイテムのインデックス。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeEditTextInTarget(System.IntPtr,System.String)">
            <summary>
            エディタのテキストを変更します。
            CBN_EDITCHANGEの通知が発生します。
            ComboBoxの場合はCBN_EDITUPDATEの通知も発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="newText">新たなテキスト。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.EmulateChangeDropDownVisibleInTarget(System.IntPtr,System.Boolean)">
            <summary>
            リストの表示、非表示を設定します。
            表示した場合はCBN_DROPDOWN、閉じた場合はCBN_SELENDCANCEL、CBN_CLOSEUPの通知が発生します。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <param name="visible">表示するか。</param>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.IsExInTarget(System.IntPtr)">
            <summary>
            ComboBoxEx32であるか。
            </summary>
            <returns>ComboBoxEx32であるか。</returns>
        </member>
        <member name="M:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.GetCurSelInTarget(System.IntPtr)">
            <summary>
            現在の選択インデックスを取得。
            </summary>
            <param name="handle">ウィンドウハンドル。</param>
            <returns>現在の選択インデックス。</returns>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.ItemCount">
            <summary>
            Returns the number of items in this combo box.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.SelectedItemIndex">
            <summary>
            Returns the index of the currently selected item.
            </summary>
        </member>
        <member name="P:Codeer.Friendly.Windows.NativeStandardControls.NativeComboBox.Text">
            <summary>
            Returns the window text.
            </summary>
        </member>
        <member name="T:Codeer.Friendly.Windows.NativeStandardControls.TVITEM">
            <summary>
            Please refer to MSDN's TVITEM.
            </summary>
        </member>
    </members>
</doc>
